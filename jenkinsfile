node {
  try {
    slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} Start Build Image", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
    stage('Clone repository') {
      sh 'cd /var/lib/jenkins/workspace/Jenkins_to_ECR'
      sh 'rm -rf *'
      checkout scm
      slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} Cloning done", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
    }
    stage('Frontend : Build') {
      frontend_app = docker.build("525348550799.dkr.ecr.ap-southeast-1.amazonaws.com/react-frontend:latest", "-f ./frontend/Dockerfile ./frontend")
      slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} Frontend => Build", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
    }
    stage('Frontend : Push') {
      docker.withRegistry('https://525348550799.dkr.ecr.ap-southeast-1.amazonaws.com', 'ecr:ap-southeast-1:jenkins_to_ecr_key') {
        frontend_app.push("latest")
        // frontend_app.push("latest")
      }
      slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} Frontend => Push", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
      sh "docker rmi -f \$(docker images -q)"
    }
    stage('AICore1 : Build') {
      aicore1_app = docker.build("525348550799.dkr.ecr.ap-southeast-1.amazonaws.com/plate-detection:latest", "-f ./car_license_detection/Dockerfile ./car_license_detection")
      slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} AICore1 => Build", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
    }
    stage('AICore1 : Push') {
      docker.withRegistry('https://525348550799.dkr.ecr.ap-southeast-1.amazonaws.com', 'ecr:ap-southeast-1:jenkins_to_ecr_key') {
        aicore1_app.push("latest")
        // aicore1_app.push("latest")
      }
      slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} AICore1 => Push", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
      sh "docker rmi -f \$(docker images -q)"
    }
    stage('AICore2 : Build') {
      aicore2_app = docker.build("525348550799.dkr.ecr.ap-southeast-1.amazonaws.com/pose-estimation:latest", "-f ./pose_estimation/Dockerfile ./pose_estimation")
      slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} AICore2 => Build", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
    }
    stage('AICore2 : Push') {
      docker.withRegistry('https://525348550799.dkr.ecr.ap-southeast-1.amazonaws.com', 'ecr:ap-southeast-1:jenkins_to_ecr_key') {
        aicore2_app.push("latest")
        // aicore2_app.push("latest")
      }
      sh "docker rmi -f \$(docker images -q)"
      slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} AICore2 => Push", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
    }
    slackSend channel: '#jenkins_noti', color: '#4682B4', message: "${JOB_NAME} - #${BUILD_NUMBER} Build Success", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'

  } catch (e) {
    echo "Failed: ${e}"
    slackSend channel: '#jenkins_noti', color: '#FF0000', message: "${JOB_NAME} - #${BUILD_NUMBER} Build Error", teamDomain: 'k8sproject5', tokenCredentialId: 'slack-token'
  }
}

